<%- include('../partials/admin/admin_header.ejs') %>

<!-- Sidebar -->
<aside class="navbar-aside" id="offcanvas_aside">
  <div class="aside-top">
    <a href="index.html" class="brand-wrap">
      <img
        src="/admin_assets/imgs/theme/watchcompany_logo.webp"
        class="logo"
        alt="Watch Company Dashboard"
      />
    </a>
  </div>
  <nav>
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/dashboard">
          <i class="icon material-icons md-home"></i>
          <span class="text">Dashboard</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/product_management">
          <i class="icon material-icons md-shopping_bag"></i>
          <span class="text">Product Management</span>
        </a>
      </li>
      <li class="menu-item active">
        <a class="menu-link" href="/admin/user_management">
          <i class="icon material-icons md-person"></i>
          <span class="text">User Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/category_management">
          <i class="icon material-icons md-stars"></i>
          <span class="text">Category Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/order_management">
          <i class="icon material-icons md-shopping_cart"></i>
          <span class="text">Order Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/coupon_management">
          <img src="/fimg/voucher.png" />
          <span class="text ml-10">Coupon Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/sales_report">
          <img src="/fimg/salesreport.png" />
          <span class="text ml-10">Sales Report</span>
        </a>
      </li>
    </ul>
    <hr />
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/logout">
          <i class="icon material-icons md-local_offer"></i>
          <span class="text"> Logout </span>
        </a>
      </li>
    </ul>
    <br />
    <br />
  </nav>
</aside>

<!-- main content -->
<main class="main-wrap">
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title">Users list</h2>
    </div>
    <div class="card mb-4">
      <header class="card-header">
        <div class="row gx-3">
          <div class="col-lg-4 col-md-6 me-auto">
            <input type="text" placeholder="Search..." id="searchInput" />
          </div>
          <div class="col-lg-2 col-md-3 col-6">
            <button
              class="btn"
              style="background-color: black; color: white"
              id="editButton"
            >
              Edit Referral Bonus
            </button>
          </div>
          <div class="col-lg-2 col-md-3 col-6">
            <select class="form-select">
              <option>Show all</option>
              <option>Active</option>
              <option>Blocked</option>
            </select>
          </div>
        </div>
      </header>

      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th class="text-center">No.</th>
                <th class="text-center">User Name</th>
                <th class="text-center">Email</th>
                <th class="text-center">Status</th>
                <th class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="userTableBody">
              <% for (let j = 0; j < users.length; j++) { %>
              <tr class="text-center">
                <td class="text-center"><%= j+1 %></td>
                <td class="text-center"><%= users[j].name %></td>
                <td class="text-center"><%= users[j].email %></td>
                <td class="text-center">
                  <% if (users[j].isBlocked) { %>
                  <span class="rounded-pill alert-danger" style="padding: 8px"
                    >Blocked</span
                  >
                  <% } else { %>
                  <span class="rounded-pill alert-success" style="padding: 8px"
                    >Active</span
                  >
                  <% } %>
                </td>
                <td>
                  <% if (!users[j].isBlocked) { %>
                  <button
                    class="btn btn-danger block-button"
                    style="width: 80px; font-size: small"
                  >
                    Block
                  </button>
                  <% } else { %>
                  <button
                    class="btn btn-success unblock-button"
                    style="width: 80px; font-size: small"
                  >
                    Unblock
                  </button>
                  <% } %>
                </td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </section>

  <div
    id="paginationContainer"
    class="pagination-area mt-30 pb-30 pagination justify-content-center"
  ></div>
</main>

<!-- SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const currentPage = 1;
    const limit = 10;
    // Store users data globally within this scope
    let usersData = [];
    let totalPagesCount = 1;

    const fetchUsers = async (page) => {
      try {
        const response = await fetch(`/admin/get_users?page=${page}`);
        if (!response.ok) {
          throw new Error("Failed to fetch users");
        }
        const { users, totalPages } = await response.json();
        // Store the fetched users in our variable
        usersData = users;
        totalPagesCount = totalPages;
        renderUsers(usersData);
        renderPagination(totalPages, page);
      } catch (error) {
        console.error("Error fetching users:", error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Failed to fetch users. Please try again later.",
        });
      }
    };

    fetchUsers(currentPage);

    const searchInput = document.getElementById("searchInput");
    const userTableBody = document.getElementById("userTableBody");
    const formSelect = document.querySelector(".form-select");

    const filterAndRenderUsers = (status, searchTerm) => {
      // Now we use usersData instead of users
      const filteredUsers = usersData.filter((user) => {
        const isMatch =
          user.name.toLowerCase().includes(searchTerm) ||
          user.email.toLowerCase().includes(searchTerm);

        if (status === "Show all") {
          return isMatch;
        } else if (status === "Active") {
          return !user.isBlocked && isMatch;
        } else if (status === "Blocked") {
          return user.isBlocked && isMatch;
        }

        return false;
      });

      renderUsers(filteredUsers);
    };

    const renderUsers = (users) => {
      userTableBody.innerHTML = "";
      users.forEach((user, index) => {
        const statusBadgeClass = user.isBlocked
          ? "alert-danger"
          : "alert-success";
        const statusText = user.isBlocked ? "Blocked" : "Active";

        const row = `
        <tr class="text-center">
          <td class="text-center">${index + 1}</td>
          <td class="text-center">${user.name}</td>
          <td class="text-center">${user.email}</td>
          <td class="text-center">
            <span class="rounded-pill ${statusBadgeClass}" style="padding: 8px">${statusText}</span>
          </td>
          <td>
            <button class="btn ${
              user.isBlocked ? "btn-success" : "btn-danger"
            } toggle-button" data-id="${user._id}" data-action="${
          user.isBlocked ? "unblock" : "block"
        }">
              ${user.isBlocked ? "Unblock" : "Block"}
            </button>
          </td>
        </tr>
      `;

        userTableBody.innerHTML += row;
      });
    };

    const toggleStatus = (userId, action) => {
      const confirmationMessage =
        action === "block"
          ? "Are you sure you want to block this user?"
          : "Are you sure you want to unblock this user?";

      Swal.fire({
        title: "Confirm",
        text: confirmationMessage,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes",
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/toggle_user_status?id=${userId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then(() => {
              location.reload();
            })
            .catch((error) => {
              console.error("Error toggling user status:", error);
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Failed to toggle user status. Please try again later.",
              });
            });
        }
      });
    };

    searchInput.addEventListener("input", () => {
      const searchTerm = searchInput.value.toLowerCase().trim();
      const selectedOption = formSelect.value;
      filterAndRenderUsers(selectedOption, searchTerm);
    });

    formSelect.addEventListener("change", (event) => {
      const selectedOption = event.target.value;
      const searchTerm = searchInput.value.toLowerCase().trim();
      filterAndRenderUsers(selectedOption, searchTerm);
    });

    // Use event delegation to handle button click events
    userTableBody.addEventListener("click", (event) => {
      if (event.target.classList.contains("toggle-button")) {
        const userId = event.target.dataset.id;
        const action = event.target.dataset.action;
        toggleStatus(userId, action);
      }
    });

    // Add a function to render the pagination links
    const renderPagination = (totalPages, currentPage) => {
      const paginationContainer = document.getElementById(
        "paginationContainer"
      );
      paginationContainer.innerHTML = "";

      for (let i = 1; i <= totalPages; i++) {
        const pageLink = document.createElement("a");
        pageLink.href = "#";
        pageLink.textContent = i;
        pageLink.classList.add("page-link");
        if (i === currentPage) {
          pageLink.classList.add("active");
        }
        pageLink.addEventListener("click", () => {
          fetchUsers(i);
        });

        const pageItem = document.createElement("li");
        pageItem.classList.add("page-item");
        pageItem.appendChild(pageLink);

        paginationContainer.appendChild(pageItem);
      }
    };

    // Referral bonus button
    const editReferralButton = document.querySelector("#editButton");

    editReferralButton.addEventListener("click", () => {
      Swal.fire({
        title: "Edit Referral Bonus",
        input: "number",
        inputLabel: "Enter new referral bonus amount",
        inputPlaceholder: "Enter amount",
        showCancelButton: true,
        confirmButtonText: "Save",
        preConfirm: (amount) => {
          if (!amount) {
            Swal.showValidationMessage("Please enter a valid amount");
          }
          return amount;
        },
      }).then((result) => {
        if (result.isConfirmed) {
          const offerAmount = result.value;
          saveReferralBonus(offerAmount);
        }
      });
    });

    const saveReferralBonus = async (offerAmount) => {
      try {
        const response = await fetch("/admin/edit_referral_bonus", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ offerAmount }),
        });

        if (!response.ok) {
          throw new Error("Failed to save referral bonus");
        }

        Swal.fire({
          icon: "success",
          title: "Saved!",
          text: "Referral bonus updated successfully",
        });
      } catch (error) {
        console.error("Error saving referral bonus:", error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Failed to save referral bonus. Please try again later.",
        });
      }
    };
  });
</script>

<%- include('../partials/admin/admin_footer.ejs') %>
