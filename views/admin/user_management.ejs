<%- include('../partials/admin/admin_header.ejs') %>

<!-- SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<!-- sidebar -->
<aside class="navbar-aside" id="offcanvas_aside">
  <div class="aside-top">
    <a href="/admin" class="brand-wrap">
      <img
        src="/admin_assets/imgs/theme/watchcompany_logo.webp"
        class="logo"
        alt="Watch Company Dashboard"
      />
    </a>
    <div>
      <button class="btn btn-icon btn-aside-minimize">
        <i class="text-muted material-icons md-menu_open"></i>
      </button>
    </div>
  </div>
  <nav>
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/dashboard">
          <i class="icon material-icons md-home"></i>
          <span class="text">Dashboard</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/product_management">
          <i class="icon material-icons md-shopping_bag"></i>
          <span class="text">Product Management</span>
        </a>
      </li>
      <li class="menu-item active">
        <a class="menu-link" href="/admin/user_management">
          <i class="icon material-icons md-person"></i>
          <span class="text">User Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/category_management">
          <i class="icon material-icons md-stars"></i>
          <span class="text">Category Management</span>
        </a>
      </li>
    </ul>
    <hr />
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/settings">
          <i class="icon material-icons md-settings"></i>
          <span class="text">Settings</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/logout">
          <i class="icon material-icons md-local_offer"></i>
          <span class="text"> Logout </span>
        </a>
      </li>
    </ul>
    <br />
    <br />
  </nav>
</aside>

<!-- main content -->
<main class="main-wrap">
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title">Users list</h2>
    </div>
    <div class="card mb-4">
      <header class="card-header">
        <div class="row gx-3">
          <div class="col-lg-4 col-md-6 me-auto">
            <input
              type="text"
              placeholder="Search..."
              id="searchInput"
              class="form-control"
            />
          </div>
          <div class="col-lg-2 col-md-3 col-6">
            <select class="form-select">
              <option>Show all</option>
              <option>Active</option>
              <option>Blocked</option>
            </select>
          </div>
        </div>
      </header>

      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th class="text-center">No.</th>
                <th class="text-center">User Name</th>
                <th class="text-center">Email</th>
                <th class="text-center">Status</th>
                <th class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="userTableBody">
              <% let i = (currentPage - 1) * usersPerPage + 1; %> <% for (let j
              = 0; j < users.length; j++) { %> <% if (j >= (currentPage - 1) *
              usersPerPage && j < currentPage * usersPerPage) { %>
              <tr class="text-center">
                <td class="text-center"><%= i %></td>
                <td class="text-center"><%= users[j].name %></td>
                <td class="text-center"><%= users[j].email %></td>
                <td class="text-center">
                  <% if (users[j].isBlocked) { %>
                  <span class="rounded-pill alert-danger" style="padding: 8px"
                    >Blocked</span>
                  <% } else { %>
                  <span class="rounded-pill alert-success" style="padding: 8px"
                    >Active</span>
                  <% } %>
                </td>
                <td>
                  <% if (!users[j].isBlocked) { %>
                  <button
                    class="btn btn-danger block-button"
                    style="width: 80px; font-size: small"
                  >
                    Block
                  </button>
                  <% } else { %>
                  <button
                    class="btn btn-success unblock-button"
                    style="width: 80px; font-size: small"
                  >
                    Unblock
                  </button>
                  <% } %>
                </td>
              </tr>
              <% i++ %> <% } %> <% } %>
            </tbody>
          </table>
        </div>
      </div>
      
      // Pagination.
      <nav aria-label="Page navigation example">
        <ul class="pagination">
          <li class="page-item <%= !hasPreviousPage ? 'disabled' : '' %>">
            <a
              class="page-link"
              href="/admin/user_management?page=<%= currentPage - 1 %>"
              tabindex="-1"
              aria-disabled="<%= !hasPreviousPage %>"
              >Previous</a
            >
          </li>
          <% for (let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="/admin/user_management?page=<%= i %>"
              ><%= i %></a
            >
          </li>
          <% } %>
          <li class="page-item <%= !hasNextPage ? 'disabled' : '' %>">
            <a
              class="page-link"
              href="/admin/user_management?page=<%= currentPage + 1 %>"
              tabindex="-1"
              aria-disabled="<%= !hasNextPage %>"
              >Next</a
            >
          </li>
        </ul>
      </nav>
    </div>
  </section>
</main>

<script>
  // Block/Unblock, Search with filter Functionalities.
  document.addEventListener("DOMContentLoaded", () => {
    console.log(`going to fetch.`);
    fetch("/admin/get_users")
      .then((response) => response.json())
      .then((users) => {
        console.log(users);
        const searchInput = document.getElementById("searchInput");
        const userTableBody = document.getElementById("userTableBody");
        const formSelect = document.querySelector(".form-select");

        // Function to filter users based on selected option and search term
        const filterAndRenderUsers = (status, searchTerm) => {
          const filteredUsers =
            status === "Show all"
              ? users.filter(
                  (user) =>
                    user.name.toLowerCase().includes(searchTerm) ||
                    user.email.toLowerCase().includes(searchTerm)
                )
              : users.filter((user) => {
                  return (
                    ((status === "Active" && !user.isBlocked) ||
                      (status === "Blocked" && user.isBlocked)) &&
                    (user.name.toLowerCase().includes(searchTerm) ||
                      user.email.toLowerCase().includes(searchTerm))
                  );
                });
          renderUsers(filteredUsers);
        };

        // Function to render users in the table
        const renderUsers = (users) => {
          userTableBody.innerHTML = "";
          users.forEach((user, index) => {
            const statusBadgeClass = user.isBlocked ? "danger" : "success";
            const statusText = user.isBlocked ? "Blocked" : "Active";

            const row = `
                <tr>
                  <td>${index + 1}</td>
                  <td>${user.name}</td>
                  <td>${user.email}</td>
                  <td>
                    <span class="rounded-pill alert-${statusBadgeClass}" style="padding: 8px">${statusText}</span>
                  </td>
                  <td class="text-end">
                    <button class="btn btn-${
                      user.isBlocked ? "success" : "danger"
                    } toggle-button" data-id="${
              user._id
            }" style="width: 80px; font-size: small">
                      ${user.isBlocked ? "Unblock" : "Block"}
                    </button>
                  </td>
                </tr>
              `;

            userTableBody.insertAdjacentHTML("beforeend", row);
          });
        };

        // Event listener for search input and form-select
        searchInput.addEventListener("input", () => {
          const searchTerm = searchInput.value.toLowerCase().trim();
          const selectedOption = formSelect.value;
          filterAndRenderUsers(selectedOption, searchTerm);
        });

        formSelect.addEventListener("change", (event) => {
          const selectedOption = event.target.value;
          const searchTerm = searchInput.value.toLowerCase().trim();
          filterAndRenderUsers(selectedOption, searchTerm);
        });

        // Event listener for block/unblock buttons
        userTableBody.addEventListener("click", (event) => {
          if (event.target.classList.contains("toggle-button")) {
            const userId = event.target.dataset.id;
            const action = event.target.textContent.trim().toLowerCase();
            toggleStatus(userId, action);
          }
        });

        // Function to toggle user status (block/unblock)
        function toggleStatus(userId, action) {
          const confirmationMessage =
            action === "block"
              ? "Are you sure you want to block this user?"
              : "Are you sure you want to unblock this user?";
          Swal.fire({
            title: "Confirm",
            text: confirmationMessage,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes",
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/admin/toggle_user_status?id=${userId}`, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
              })
                .then(() => {
                  location.reload();
                })
                .catch((error) => {
                  console.error("Error toggling user status:", error);
                });
            }
          });
        }

        // Initial render
        renderUsers(users);
      })
      .catch((error) => {
        console.error("Error fetching users:", error);
      });
  });
</script>

<%- include('../partials/admin/admin_footer.ejs') %>
