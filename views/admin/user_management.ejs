<%- include('../partials/admin/admin_header.ejs') %>

<!-- SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<!-- sidebar -->
<aside class="navbar-aside" id="offcanvas_aside">
  <div class="aside-top">
    <a href="/admin" class="brand-wrap">
      <img
        src="/admin_assets/imgs/theme/watchcompany_logo.webp"
        class="logo"
        alt="Watch Company Dashboard"
      />
    </a>
    <div>
      <button class="btn btn-icon btn-aside-minimize">
        <i class="text-muted material-icons md-menu_open"></i>
      </button>
    </div>
  </div>
  <nav>
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/dashboard">
          <i class="icon material-icons md-home"></i>
          <span class="text">Dashboard</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/product_management">
          <i class="icon material-icons md-shopping_bag"></i>
          <span class="text">Product Management</span>
        </a>
      </li>
      <li class="menu-item active">
        <a class="menu-link" href="/admin/user_management">
          <i class="icon material-icons md-person"></i>
          <span class="text">User Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/category_management">
          <i class="icon material-icons md-stars"></i>
          <span class="text">Category Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/order_management">
          <i class="icon material-icons md-shopping_cart"></i>
          <span class="text">Order Management</span>
        </a>
      </li>
    </ul>
    <hr />
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/settings">
          <i class="icon material-icons md-settings"></i>
          <span class="text">Settings</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/logout">
          <i class="icon material-icons md-local_offer"></i>
          <span class="text"> Logout </span>
        </a>
      </li>
    </ul>
    <br />
    <br />
  </nav>
</aside>

<!-- main content -->
<main class="main-wrap">
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title">Users list</h2>
    </div>
    <div class="card mb-4">
      <header class="card-header">
        <div class="row gx-3">
          <div class="col-lg-4 col-md-6 me-auto">
            <input type="text" placeholder="Search..." id="searchInput" />
          </div>
          <div class="col-lg-2 col-md-3 col-6">
            <select class="form-select">
              <option>Show all</option>
              <option>Active</option>
              <option>Blocked</option>
            </select>
          </div>
        </div>
      </header>

      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th class="text-center">No.</th>
                <th class="text-center">User Name</th>
                <th class="text-center">Email</th>
                <th class="text-center">Status</th>
                <th class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="userTableBody">
              <% for (let j = 0; j < users.length; j++) { %>
              <tr class="text-center">
                <td class="text-center"><%= j+1 %></td>
                <td class="text-center"><%= users[j].name %></td>
                <td class="text-center"><%= users[j].email %></td>
                <td class="text-center">
                  <% if (users[j].isBlocked) { %>
                  <span class="rounded-pill alert-danger" style="padding: 8px"
                    >Blocked</span
                  >
                  <% } else { %>
                  <span class="rounded-pill alert-success" style="padding: 8px"
                    >Active</span
                  >
                  <% } %>
                </td>
                <td>
                  <% if (!users[j].isBlocked) { %>
                  <button
                    class="btn btn-danger block-button"
                    style="width: 80px; font-size: small"
                  >
                    Block
                  </button>
                  <% } else { %>
                  <button
                    class="btn btn-success unblock-button"
                    style="width: 80px; font-size: small"
                  >
                    Unblock
                  </button>
                  <% } %>
                </td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </section>
</main>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    fetch("/admin/get_users")
      .then((response) => {
        if (!response.ok) {
          throw new Error("Failed to fetch users");
        }
        return response.json();
      })
      .then((users) => {
        console.log(users);

        const searchInput = document.getElementById("searchInput");
        const userTableBody = document.getElementById("userTableBody");
        const formSelect = document.querySelector(".form-select");

        const filterAndRenderUsers = (status, searchTerm) => {
          const filteredUsers = users.filter((user) => {
            const isMatch =
              user.name.toLowerCase().includes(searchTerm) ||
              user.email.toLowerCase().includes(searchTerm);

            if (status === "Show all") {
              return isMatch;
            } else if (status === "Active") {
              return !user.isBlocked && isMatch;
            } else if (status === "Blocked") {
              return user.isBlocked && isMatch;
            }

            return false;
          });

          renderUsers(filteredUsers);
        };

        const renderUsers = (users) => {
          userTableBody.innerHTML = "";
          users.forEach((user, index) => {
            const statusBadgeClass = user.isBlocked
              ? "alert-danger"
              : "alert-success";
            const statusText = user.isBlocked ? "Blocked" : "Active";

            const row = `
              <tr class="text-center">
                <td class="text-center">${index + 1}</td>
                <td class="text-center">${user.name}</td>
                <td class="text-center">${user.email}</td>
                <td class="text-center">
                  <span class="rounded-pill ${statusBadgeClass}" style="padding: 8px">${statusText}</span>
                </td>
                <td>
                  <button class="btn ${
                    user.isBlocked ? "btn-success" : "btn-danger"
                  } toggle-button" data-id="${user._id}">
                    ${user.isBlocked ? "Unblock" : "Block"}
                  </button>
                </td>
              </tr>
            `;

            userTableBody.innerHTML += row;
          });
        };

        const toggleStatus = (userId, action) => {
          const confirmationMessage =
            action === "block"
              ? "Are you sure you want to block this user?"
              : "Are you sure you want to unblock this user?";

          Swal.fire({
            title: "Confirm",
            text: confirmationMessage,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes",
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/admin/toggle_user_status?id=${userId}`, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
              })
                .then(() => {
                  location.reload(); // Refresh the page after successful toggle
                })
                .catch((error) => {
                  console.error("Error toggling user status:", error);
                  Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Failed to toggle user status. Please try again later.",
                  });
                });
            }
          });
        };

        searchInput.addEventListener("input", () => {
          const searchTerm = searchInput.value.toLowerCase().trim();
          const selectedOption = formSelect.value;
          filterAndRenderUsers(selectedOption, searchTerm);
        });

        formSelect.addEventListener("change", (event) => {
          const selectedOption = event.target.value;
          const searchTerm = searchInput.value.toLowerCase().trim();
          filterAndRenderUsers(selectedOption, searchTerm);
        });

        // Use event delegation to handle button click events
        userTableBody.addEventListener("click", (event) => {
          if (event.target.classList.contains("toggle-button")) {
            const userId = event.target.dataset.id;
            const action = event.target.textContent.toLowerCase().trim(); // Get button text
            toggleStatus(userId, action);
          }
        });

        // Initial rendering of all users
        renderUsers(users);
      })
      .catch((error) => {
        console.error("Error fetching users:", error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Failed to fetch users. Please try again later.",
        });
      });
  });

  // Search fetch
  function setupSearch() {
    const searchInput = document.getElementById("searchInput");

    searchInput.addEventListener("input", async () => {
      const query = searchInput.value.trim();

      try {
        const response = await fetch(
          `/products/search?query=${encodeURIComponent(query)}`
        );
        if (!response.ok) {
          throw new Error("Failed to fetch search results");
        }

        const searchResults = await response.json();
        displayProducts(searchResults); // Display the search results on the page
      } catch (error) {
        console.error("Error searching products:", error.message);
      }
    });
  }

  // Call setupSearch() to initialize real-time search functionality
  setupSearch();

  // Search Function
  function displayProducts(products) {
    const productGrid = document.querySelector(".product-grid-3");
    productGrid.innerHTML = ""; // Clear existing products

    products.forEach((product) => {
      const productHTML = `
      <div class="col-lg-4 col-md-4 col-12 col-sm-6">
        <div class="product-cart-wrap mb-30">
          <!-- Product image and details -->
          <a href="/load_product?id=${product._id}">
            <img class="default-img" src="/uploads/${product.media[0]}" alt="${product.name}" />
          </a>
          <div class="product-content-wrap">
            <div class="product-category">
              <a href="#">${product.category}</a>
            </div>
            <h2 class="product-name">
              <a href="/load_product?id=${product._id}">${product.name}</a>
            </h2>
            <div class="product-price">
              <span>$${product.price}</span>
            </div>
            <div class="product-action-1 show">
              <a aria-label="Add To Cart" class="action-btn hover-up" onclick="addToCart('${product._id}')">
                <i class="fi-rs-shopping-bag-add"></i>
              </a>
              <a aria-label="Add To Wishlist" class="action-btn hover-up" href="#">
                <i class="fi-rs-heart"></i>
              </a>
            </div>
          </div>
        </div>
      </div>
    `;

      productGrid.insertAdjacentHTML("beforeend", productHTML);
    });
  }
</script>

<%- include('../partials/admin/admin_footer.ejs') %>
