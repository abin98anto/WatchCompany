<%- include('../partials/admin/admin_header.ejs') %>

<!-- Sidebar -->
<aside class="navbar-aside" id="offcanvas_aside">
  <div class="aside-top">
    <a href="index.html" class="brand-wrap">
      <img
        src="/admin_assets/imgs/theme/watchcompany_logo.webp"
        class="logo"
        alt="Watch Company Dashboard"
      />
    </a>
  </div>
  <nav>
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/dashboard">
          <i class="icon material-icons md-home"></i>
          <span class="text">Dashboard</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/product_management">
          <i class="icon material-icons md-shopping_bag"></i>
          <span class="text">Product Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/user_management">
          <i class="icon material-icons md-person"></i>
          <span class="text">User Management</span>
        </a>
      </li>
      <li class="menu-item active">
        <a class="menu-link" href="/admin/category_management">
          <i class="icon material-icons md-stars"></i>
          <span class="text">Category Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/order_management">
          <i class="icon material-icons md-shopping_cart"></i>
          <span class="text">Order Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/coupon_management">
          <img src="/fimg/voucher.png">
          <span class="text ml-10">Coupon Management</span>
        </a>
      </li>
      <li class="menu-item">
        <a class="menu-link" href="/admin/sales_report">
          <img src="/fimg/salesreport.png">
          <span class="text ml-10">Sales Report</span>
        </a>
      </li>
    </ul>
    <hr />
    <ul class="menu-aside">
      <li class="menu-item">
        <a class="menu-link" href="/admin/logout">
          <i class="icon material-icons md-local_offer"></i>
          <span class="text"> Logout </span>
        </a>
      </li>
    </ul>
    <br />
    <br />
  </nav>
</aside>

<main class="main-wrap">
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Categories</h2>
        <p>Add, edit or delete a category</p>
      </div>
      <div>
        <input
          type="text"
          placeholder="Search Categories"
          class="form-control bg-white"
          id="searchInput"
        />
      </div>
    </div>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <!-- Create Category Section. -->
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory">
              <div class="mb-4">
                <input
                  type="text"
                  placeholder="Enter category name"
                  class="form-control"
                  name="category_name"
                />
              </div>
              <div class="mb-4">
                <input
                  type="text"
                  placeholder="Enter category discount percentage"
                  class="form-control"
                  name="categoryDiscount"
                />
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
              <div>
                <% if (message) { %>
                <p style="color: red"><%= message %></p>
                <% } %>
              </div>
            </form>
          </div>
          <!-- Existing Category Table -->
          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table table-hover" id="categoryTable">
                <thead>
                  <tr class="text-center">
                    <th>No.</th>
                    <th>Name</th>
                    <th>Discount %</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody id="categoryTableBody">
                  <% let i = 1 %> <% categories.forEach((category) => { %>
                  <tr class="text-center">
                    <td><%= i %></td>
                    <td><b><%= category.name %> </b></td>
                    <td><%= category.categoryDiscount %></td>
                    <td>
                      <% if (category.isUnlisted) { %>
                      <span
                        class="rounded-pill alert-danger"
                        style="padding: 8px"
                        >Unlisted</span
                      >
                      <% } else { %>
                      <span
                        class="rounded-pill alert-success"
                        style="padding: 8px"
                        >Active</span
                      >
                      <% } %>
                    </td>
                    <td class="text-end">
                      <ul style="display: flex; justify-content: space-evenly">
                        <li>
                          <!-- <form> -->
                          <input
                            type="hidden"
                            name="id"
                            value="<%=  category._id  %>"
                          />
                          <button
                            type="submit"
                            class="btn border border-secondary edit-button"
                            style="width: 80px; font-size: small"
                          >
                            <i class="material-icons md-edit"></i>
                            Edit
                          </button>
                          <!-- </form> -->
                        </li>
                        <li>
                          <% if (category.isUnlisted === false) { %>
                          <form>
                            <input
                              type="hidden"
                              name="id"
                              value="<%= category._id %>"
                            />
                            <button
                              type="submit"
                              class="btn btn-danger unlist-button"
                              style="width: 80px; font-size: smaller"
                            >
                              <i
                                class="material-icons md-playlist_add_check"
                              ></i>
                              Unlist
                            </button>
                          </form>
                          <% } else { %>
                          <form>
                            <input
                              type="hidden"
                              name="id"
                              value="<%= category._id %>"
                            />
                            <button
                              type="submit"
                              class="btn btn-success list-button"
                              style="width: 80px; font-size: small"
                            >
                              <i class="material-icons md-playlist_add"></i>
                              List
                            </button>
                          </form>
                          <% } %>
                        </li>
                        <li>
                          <form>
                            <input
                              type="hidden"
                              name="id"
                              value="<%= category._id %>"
                            />
                            <button
                              type="submit"
                              class="btn delete-button"
                              style="color: white; background-color: black"
                            >
                              <i class="material-icons md-delete-forever"></i>
                              Delete
                            </button>
                          </form>
                        </li>
                      </ul>
                    </td>
                  </tr>
                  <% i++ %> <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Pagination -->

  <!-- Pagination links -->
  <div style="flex-direction: column; align-items: center" class="d-flex">
    <nav aria-label="Page navigation example">
      <ul class="pagination">
        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
          <a
            class="page-link"
            href="/admin/category_management?page=<%= currentPage - 1 %>&limit=<%= limit %>"
            tabindex="-1"
            aria-disabled="<%= currentPage === 1 %>"
            >Previous</a
          >
        </li>
        <% for (let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
          <a
            class="page-link"
            href="/admin/category_management?page=<%= i %>&limit=<%= limit %>"
            ><%= i %></a
          >
        </li>
        <% } %>
        <li
          class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>"
        >
          <a
            class="page-link"
            href="/admin/category_management?page=<%= currentPage + 1 %>&limit=<%= limit %>"
            tabindex="-1"
            aria-disabled="<%= currentPage === totalPages %>"
            >Next</a
          >
        </li>
      </ul>
    </nav>
  </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Delete button functionality. -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const deleteButtons = document.querySelectorAll(".delete-button");
    deleteButtons.forEach((button) => {
      button.addEventListener("click", async (event) => {
        event.preventDefault();
        const categoryId =
          event.target.parentNode.querySelector('input[name="id"]').value;

        const categoryName = event.target
          .closest("tr")
          .querySelector("td:nth-child(2)").innerText;

        Swal.fire({
          title: `Are you sure you want to delete "${categoryName}"?`,
          text: "You won't be able to revert this!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#3085d6",
          confirmButtonText: "Yes, delete it!",
        }).then(async (result) => {
          if (result.isConfirmed) {
            try {
              const response = await fetch(
                `/admin/delete_category?id=${categoryId}`,
                {
                  method: "post",
                }
              );

              if (!response.ok) {
                throw new Error("Failed to delete category");
              }

              // Reload the page after deletion
              window.location.reload();
            } catch (error) {
              console.error("Error:", error);
              Swal.fire("Error!", "Failed to delete category.", "error");
            }
          }
        });
      });
    });
  });
</script>

<!-- List/ Unlist Functionality -->
<script>
  // Unlist category.
  document.addEventListener("DOMContentLoaded", () => {
    const unlistButtons = document.querySelectorAll(".unlist-button");
    unlistButtons.forEach((button) => {
      button.addEventListener("click", async (event) => {
        event.preventDefault();
        const categoryId =
          event.target.parentNode.querySelector('input[name="id"]').value;
        const categoryName = event.target
          .closest("tr")
          .querySelector("td:nth-child(2)").innerText;

        Swal.fire({
          title: `Are you sure you want to Unlist "${categoryName}"?`,
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#3085d6",
          confirmButtonText: "Yes, unlist it!",
        }).then(async (result) => {
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/admin/unlist?id=${categoryId}`, {
                method: "post",
              });

              if (!response.ok) {
                throw new Error("Failed to unlist category");
              }
              window.location.reload();
            } catch (error) {
              console.error("Error:", error);
              Swal.fire("Error!", "Failed to unlist category.", "error");
            }
          }
        });
      });
    });
  });

  // list category
  document.addEventListener("DOMContentLoaded", () => {
    const listButtons = document.querySelectorAll(".list-button");
    listButtons.forEach((button) => {
      button.addEventListener("click", async (event) => {
        event.preventDefault();
        const categoryId =
          event.target.parentNode.querySelector('input[name="id"]').value;
        const categoryName = event.target
          .closest("tr")
          .querySelector("td:nth-child(2)").innerText;

        Swal.fire({
          title: `Are you sure you want to list "${categoryName}"?`,
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, list it!",
        }).then(async (result) => {
          if (result.isConfirmed) {
            try {
              const response = await fetch(`/admin/list?id=${categoryId}`, {
                method: "post",
              });

              if (!response.ok) {
                throw new Error("Failed to list category");
              }
              window.location.reload();
            } catch (error) {
              console.error("Error:", error);
              Swal.fire("Error!", "Failed to list category.", "error");
            }
          }
        });
      });
    });
  });
</script>

<!-- Edit Category -->
<script>
document.addEventListener("DOMContentLoaded", () => {
  const editButtons = document.querySelectorAll(".edit-button");

  editButtons.forEach((button) => {
    button.addEventListener("click", async (event) => {
      event.preventDefault();

      const categoryName = event.target
        .closest("tr")
        .querySelector("td:nth-child(2)").innerText;
      const categoryDiscount = event.target
        .closest("tr")
        .querySelector("td:nth-child(3)").innerText;
      const categoryId = event.target
        .closest("tr")
        .querySelector('input[name="id"]').value;

      const { value: formValues } = await Swal.fire({
        title: "Edit Category",
        html:
          `<input id="swal-input1" class="swal2-input" value="${categoryName}" placeholder="Enter new category name">` +
          `<input id="swal-input2" class="swal2-input" value="${categoryDiscount}" placeholder="Enter new category discount">`,
        focusConfirm: false,
        preConfirm: () => {
          return [
            document.getElementById('swal-input1').value,
            document.getElementById('swal-input2').value
          ]
        },
        showCancelButton: true,
        confirmButtonText: "Save changes",
        showLoaderOnConfirm: true,
      });

      const newCategoryName = formValues[0].trim();
      const newCategoryDiscount = formValues[1].trim();

      if (!newCategoryName) {
        Swal.fire("Error!", "Category name cannot be empty.", "error");
        return;
      }

      if (isNaN(newCategoryDiscount) || newCategoryDiscount < 0 || newCategoryDiscount > 100) {
        Swal.fire("Error!", "Discount must be a number between 0 and 100.", "error");
        return;
      }

      const catName = newCategoryName.charAt(0).toUpperCase() + newCategoryName.slice(1).toLowerCase();

      try {
        const response = await fetch(`/admin/edit_category?id=${categoryId}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ new_name: catName, new_discount: newCategoryDiscount }),
        });

        if (response.ok) {
          Swal.fire("Success!", "Category updated successfully.", "success").then(() => {
            window.location.reload();
          });
        } else {
          throw new Error("Failed to edit category");
        }
      } catch (error) {
        console.error("Error:", error);
        Swal.fire("Error!", "Failed to update category.", "error");
      }
    });
  });
});
</script>

<!-- Create category from validation -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const addCategoryForm = document.querySelector(
      'form[action="/admin/addCategory"]'
    );
    const categoryNameInput = addCategoryForm.querySelector(
      'input[name="category_name"]'
    );

    addCategoryForm.addEventListener("submit", async (event) => {
      event.preventDefault();

      const categoryName = categoryNameInput.value.trim();

      if (categoryName === "") {
        Swal.fire("Error!", "Category name cannot be empty.", "error");
        return;
      }

      try {
        const response = await fetch("/admin/check_category", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ categoryName }),
        });

        const data = await response.json();

        if (data.exists) {
          Swal.fire("Error!", "The Category already exists.", "error");
        } else {
          addCategoryForm.submit();
        }
      } catch (error) {
        console.error("Error checking category:", error);
        Swal.fire("Error!", "Failed to check category existence.", "error");
      }
    });
  });
</script>

<%- include('../partials/admin/admin_footer.ejs') %>
