<%- include('../partials/header.ejs') %> <%-
include('../partials/page_header.ejs') %>

<main class="main">
  <!-- Breadcrumbs -->
  <div class="page-header breadcrumb-wrap pb-5 pt-5" style="padding: 0px">
    <div class="container">
      <div class="breadcrumb">
        <span><a href="/" rel="nofollow">Home</a></span
        ><a href="/login"> Login</a>
        <span><a href="/forgot_password">Forgot Password</a></span>
      </div>
    </div>
  </div>

  <!-- Main Content. -->
  <section style="background-color: black">
    <div class="container-fluid">
      <div class="row justify-content-center">
        <div class="col-sm-6 pt-10 pb-10" style="color: white">
          <div
            class="p-30 background-white border-radius-10"
            style="background-color: white; height: 400px"
          >
            <div
              class="bg-white"
              style="
                height: 100%;
                display: flex;
                justify-content: center;
                align-items: center;
              "
            >
              <div style="width: 80%">
                <div class="heading_s1">
                  <h3 class="mb-20 text-center">Forgot Password</h3>
                </div>
                <form id="verifyOTPForm" method="post" class="text-center">
                  <div class="form-group">
                    <input
                      type="text"
                      name="email"
                      id="email"
                      placeholder="Enter email"
                      class="form-control"
                    />
                  </div>
                  <div id="errorMessage" style="color: red; height: 40px">
                    <!--  -->
                  </div>
                  <div class="form-group">
                    <button
                      type="submit"
                      id="submitOTPButton"
                      class="btn btn-fill-out btn-block hover-up"
                      style="background-color: black"
                    >
                      Send OTP
                    </button>
                  </div>
                  <div class="text-muted text-center">
                    Already have an account? <a href="/login">Login</a>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- The most definitive version of forgot password ever. -->
<script>
  // Validate password format
  const validatePassword = (password) => {
    const capitalRegex = /[A-Z]/;
    const symbolRegex = /[!@#$%^&*(),.?":{}|<>]/;
    const numberRegex = /[0-9]/;

    return (
      capitalRegex.test(password) &&
      symbolRegex.test(password) &&
      numberRegex.test(password) &&
      password.length >= 8
    );
  };

  // Forget password functionality.
  // document
  //   .getElementById("submitOTPButton")
  //   .addEventListener("click", async (e) => {
  //     e.preventDefault();
  //     const emailInput = document.getElementById("email");
  //     const email = emailInput.value.trim();

  //     const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

  //     if (!emailRegex.test(email)) {
  //       document.getElementById("errorMessage").innerText =
  //         "Please enter a valid email address.";
  //       emailInput.focus();
  //       return;
  //     }

  //     try {
  //       const response = await fetch("/check-email", {
  //         method: "POST",
  //         headers: { "Content-Type": "application/json" },
  //         body: JSON.stringify({ email }),
  //       });
  //       const data = await response.json();
  //       if (data.exists) {
  //         const sendOTP = async () => {
  //           const otpResponse = await fetch("/forgotPassword_otp", {
  //             method: "POST",
  //             headers: { "Content-Type": "application/json" },
  //             body: JSON.stringify({ email }),
  //           });
  //           return otpResponse.text();
  //         };

  //         // Function to display OTP input with timer
  //         const displayOTPInput = async () => {
  //           let timeLeft = 60;
  //           const timerInterval = setInterval(() => {
  //             document.getElementById(
  //               "timer"
  //             ).innerText = `Time left: ${timeLeft} seconds`;
  //             timeLeft--;

  //             if (timeLeft < 0) {
  //               clearInterval(timerInterval);
  //               Swal.fire({
  //                 title: "Resend OTP",
  //                 text: "Do you want to resend OTP?",
  //                 showCancelButton: true,
  //                 confirmButtonText: "Yes",
  //                 cancelButtonText: "No",
  //               }).then((result) => {
  //                 if (result.isConfirmed) {
  //                   // Resend OTP logic
  //                   sendOTP().then(() => {
  //                     displayOTPInput();
  //                   });
  //                 }
  //               });
  //             }
  //           }, 1000);

  //           Swal.fire({
  //             title: "Enter OTP",
  //             input: "text",
  //             inputAttributes: {
  //               autocapitalize: "off",
  //             },
  //             html: '<span id="timer">Time left: 60 seconds</span>',
  //             showCancelButton: true,
  //             confirmButtonText: "Submit",
  //             showLoaderOnConfirm: true,
  //             preConfirm: (otp) => {
  //               clearInterval(timerInterval); // Stop the timer when OTP is submitted
  //               // Verify OTP
  //               return fetch("/forgotPassword_verifyotp", {
  //                 method: "POST",
  //                 headers: { "Content-Type": "application/json" },
  //                 body: JSON.stringify({ otp }),
  //               })
  //                 .then((response) => response.json())
  //                 .then((data) => {
  //                   if (data.success) {
  //                     // If OTP is correct, display another SweetAlert for entering new password
  //                     Swal.fire({
  //                       title: "Enter New Password",
  //                       html:
  //                         '<input id="newPassword" class="swal2-input" placeholder="New Password" type="password">' +
  //                         '<input id="confirmPassword" class="swal2-input" placeholder="Confirm Password" type="password">',
  //                       showCancelButton: true,
  //                       confirmButtonText: "Submit",
  //                       showLoaderOnConfirm: true,
  //                       preConfirm: async () => {
  //                         const newPasswordInput =
  //                           document.getElementById("newPassword").value;
  //                         const confirmPasswordInput =
  //                           document.getElementById("confirmPassword").value;

  //                         // Validate password format
  //                         if (!validatePassword(newPasswordInput)) {
  //                           Swal.showValidationMessage(
  //                             "Password must have at least one capital letter, one symbol, one number, and 8 characters."
  //                           );
  //                         }

  //                         // Check if passwords match
  //                         if (newPasswordInput !== confirmPasswordInput) {
  //                           Swal.showValidationMessage(
  //                             "Passwords do not match."
  //                           );
  //                         }

  //                         // If password format and matching are correct, proceed with submission
  //                         const response = await fetch("/updatePassword", {
  //                           method: "POST",
  //                           headers: { "Content-Type": "application/json" },
  //                           body: JSON.stringify({
  //                             email,
  //                             newPassword: newPasswordInput,
  //                           }),
  //                         });
  //                         const data = await response.json();
  //                         return data;
  //                       },
  //                       allowOutsideClick: () => !Swal.isLoading(),
  //                     }).then((result) => {
  //                       // Show success alert upon successful password change
  //                       if (result.value) {
  //                         Swal.fire({
  //                           icon: "success",
  //                           title: "Password Changed",
  //                           text: "Your password has been updated successfully.",
  //                         }).then(() => {
  //                           // Redirect to login page
  //                           window.location.href = "/login";
  //                         });
  //                       }
  //                     });
  //                   } else {
  //                     window.location.href = "/forgot_password";
  //                   }
  //                 })
  //                 .catch((error) => {
  //                   console.error(error);
  //                   Swal.fire({
  //                     icon: "error",
  //                     title: "Oops...",
  //                     text: "Error verifying OTP!",
  //                   });
  //                 });
  //             },
  //             allowOutsideClick: () => !Swal.isLoading(),
  //           });
  //         };
  //         await sendOTP();
  //         displayOTPInput();
  //       } else {
  //         document.getElementById("errorMessage").innerText =
  //           "Email doesn't belong to any account. Please sign up.";
  //       }
  //     } catch (error) {
  //       console.error(error);
  //     }
  //   });

  // document
  //   .getElementById("submitOTPButton")
  //   .addEventListener("click", async (e) => {
  //     e.preventDefault();
  //     const emailInput = document.getElementById("email");
  //     const email = emailInput.value.trim();

  //     const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

  //     if (!emailRegex.test(email)) {
  //       document.getElementById("errorMessage").innerText =
  //         "Please enter a valid email address.";
  //       emailInput.focus();
  //       return;
  //     }

  //     try {
  //       const response = await fetch("/check-email", {
  //         method: "POST",
  //         headers: { "Content-Type": "application/json" },
  //         body: JSON.stringify({ email }),
  //       });
  //       const data = await response.json();

  //       if (data.exists) {
  //         const sendOTP = async () => {
  //           const otpResponse = await fetch("/forgotPassword_otp", {
  //             method: "POST",
  //             headers: { "Content-Type": "application/json" },
  //             body: JSON.stringify({ email }),
  //           });
  //           return otpResponse.text();
  //         };

  //         // Function to display OTP input with timer
  //         const displayOTPInput = async () => {
  //           let timeLeft = 60;
  //           const timerInterval = setInterval(() => {
  //             document.getElementById(
  //               "timer"
  //             ).innerText = `Time left: ${timeLeft} seconds`;
  //             timeLeft--;

  //             if (timeLeft < 0) {
  //               clearInterval(timerInterval);
  //               Swal.fire({
  //                 title: "Resend OTP",
  //                 text: "Do you want to resend OTP?",
  //                 showCancelButton: true,
  //                 confirmButtonText: "Yes",
  //                 cancelButtonText: "No",
  //               }).then((result) => {
  //                 if (result.isConfirmed) {
  //                   // Resend OTP logic
  //                   sendOTP().then(() => {
  //                     displayOTPInput();
  //                   });
  //                 }
  //               });
  //             }
  //           }, 1000);

  //           Swal.fire({
  //             title: "Enter OTP",
  //             input: "text",
  //             inputAttributes: { autocapitalize: "off" },
  //             html: '<span id="timer">Time left: 60 seconds</span>',
  //             showCancelButton: true,
  //             confirmButtonText: "Submit",
  //             showLoaderOnConfirm: true,
  //             preConfirm: (otp) => {
  //               clearInterval(timerInterval); // Stop the timer when OTP is submitted
  //               // Verify OTP
  //               return fetch("/forgotPassword_verifyotp", {
  //                 method: "POST",
  //                 headers: { "Content-Type": "application/json" },
  //                 body: JSON.stringify({ otp }),
  //               })
  //                 .then((response) => response.json())
  //                 .then((data) => {
  //                   if (data.success) {
  //                     // If OTP is correct, display another SweetAlert for entering new password
  //                     Swal.fire({
  //                       title: "Enter New Password",
  //                       html:
  //                         '<input id="newPassword" class="swal2-input" placeholder="New Password" type="password">' +
  //                         '<input id="confirmPassword" class="swal2-input" placeholder="Confirm Password" type="password">',
  //                       showCancelButton: true,
  //                       confirmButtonText: "Submit",
  //                       showLoaderOnConfirm: true,
  //                       preConfirm: async () => {
  //                         const newPasswordInput =
  //                           document.getElementById("newPassword").value;
  //                         const confirmPasswordInput =
  //                           document.getElementById("confirmPassword").value;

  //                         // Validate password format
  //                         if (!validatePassword(newPasswordInput)) {
  //                           Swal.showValidationMessage(
  //                             "Password must meet the criteria."
  //                           );
  //                           return false;
  //                         }

  //                         // Check if passwords match
  //                         if (newPasswordInput !== confirmPasswordInput) {
  //                           Swal.showValidationMessage(
  //                             "Passwords do not match."
  //                           );
  //                           return false;
  //                         }

  //                         // If password format and matching are correct, proceed with submission
  //                         const response = await fetch("/updatePassword", {
  //                           method: "POST",
  //                           headers: { "Content-Type": "application/json" },
  //                           body: JSON.stringify({
  //                             email,
  //                             newPassword: newPasswordInput,
  //                           }),
  //                         });
  //                         const data = await response.json();
  //                         return data;
  //                       },
  //                       allowOutsideClick: () => !Swal.isLoading(),
  //                     }).then((result) => {
  //                       // Show success alert upon successful password change
  //                       if (result.value) {
  //                         Swal.fire({
  //                           icon: "success",
  //                           title: "Password Changed",
  //                           text: "Your password has been updated successfully.",
  //                         }).then(() => {
  //                           // Redirect to login page
  //                           window.location.href = "/login";
  //                         });
  //                       }
  //                     });
  //                   } else {
  //                     // Display error message for wrong OTP
  //                     Swal.showValidationMessage(
  //                       "Incorrect OTP. Please try again."
  //                     );
  //                   }
  //                 })
  //                 .catch((error) => {
  //                   console.error(error);
  //                   Swal.fire({
  //                     icon: "error",
  //                     title: "Error",
  //                     text: "Failed to verify OTP.",
  //                   });
  //                 });
  //             },
  //             allowOutsideClick: () => !Swal.isLoading(),
  //           });
  //         };

  //         await sendOTP();
  //         displayOTPInput();
  //       } else {
  //         document.getElementById("errorMessage").innerText =
  //           "Email doesn't belong to any account. Please sign up.";
  //       }
  //     } catch (error) {
  //       console.error(error);
  //     }
  //   });

  document
    .getElementById("submitOTPButton")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById("email");
      const email = emailInput.value.trim();

      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!emailRegex.test(email)) {
        document.getElementById("errorMessage").innerText =
          "Please enter a valid email address.";
        emailInput.focus();
        return;
      }

      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();

        if (data.exists) {
          const sendOTP = async () => {
            const otpResponse = await fetch("/forgotPassword_otp", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ email }),
            });
            return otpResponse.text();
          };

          // Function to display OTP input with timer
          const displayOTPInput = async () => {
            let timeLeft = 60;
            const timerInterval = setInterval(() => {
              document.getElementById(
                "timer"
              ).innerText = `Time left: ${timeLeft} seconds`;
              timeLeft--;

              if (timeLeft < 0) {
                clearInterval(timerInterval);
                Swal.fire({
                  title: "Resend OTP",
                  text: "Do you want to resend OTP?",
                  showCancelButton: true,
                  confirmButtonText: "Yes",
                  cancelButtonText: "No",
                }).then((result) => {
                  if (result.isConfirmed) {
                    // Resend OTP logic
                    sendOTP().then(() => {
                      displayOTPInput();
                    });
                  }
                });
              }
            }, 1000);

            Swal.fire({
              title: "Enter OTP",
              input: "text",
              inputAttributes: { autocapitalize: "off" },
              html: '<span id="timer">Time left: 60 seconds</span>',
              showCancelButton: true,
              confirmButtonText: "Submit",
              showLoaderOnConfirm: true,
              preConfirm: (otp) => {
                clearInterval(timerInterval); // Stop the timer when OTP is submitted
                // Verify OTP
                return fetch("/forgotPassword_verifyotp", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ otp }),
                })
                  .then((response) => response.json())
                  .then((data) => {
                    if (data.success) {
                      // If OTP is correct, display another SweetAlert for entering new password
                      Swal.fire({
                        title: "Enter New Password",
                        html:
                          '<input id="newPassword" class="swal2-input" placeholder="New Password" type="password">' +
                          '<input id="confirmPassword" class="swal2-input" placeholder="Confirm Password" type="password">',
                        showCancelButton: true,
                        confirmButtonText: "Submit",
                        showLoaderOnConfirm: true,
                        preConfirm: async () => {
                          const newPasswordInput =
                            document.getElementById("newPassword").value;
                          const confirmPasswordInput =
                            document.getElementById("confirmPassword").value;

                          // Validate password format
                          if (!validatePassword(newPasswordInput)) {
                            Swal.showValidationMessage(
                              "Password must have at least one uppercase letter, one lowercase letter, one digit, one special symbol, and be at least 8 characters long."
                            );
                            return false;
                          }

                          // Check if passwords match
                          if (newPasswordInput !== confirmPasswordInput) {
                            Swal.showValidationMessage(
                              "Passwords do not match."
                            );
                            return false;
                          }

                          // If password format and matching are correct, proceed with submission
                          const response = await fetch("/updatePassword", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                              email,
                              newPassword: newPasswordInput,
                            }),
                          });
                          const data = await response.json();
                          return data;
                        },
                        allowOutsideClick: () => !Swal.isLoading(),
                      }).then((result) => {
                        // Show success alert upon successful password change
                        if (result.value) {
                          Swal.fire({
                            icon: "success",
                            title: "Password Changed",
                            text: "Your password has been updated successfully.",
                          }).then(() => {
                            // Redirect to login page
                            window.location.href = "/login";
                          });
                        }
                      });
                    } else {
                      // Display error message for wrong OTP
                      Swal.showValidationMessage(
                        "Incorrect OTP. Please try again."
                      );
                    }
                  })
                  .catch((error) => {
                    console.error(error);
                    Swal.fire({
                      icon: "error",
                      title: "Error",
                      text: "Failed to verify OTP.",
                    });
                  });
              },
              allowOutsideClick: () => !Swal.isLoading(),
            });
          };

          await sendOTP();
          displayOTPInput();
        } else {
          document.getElementById("errorMessage").innerText =
            "Email doesn't belong to any account. Please sign up.";
        }
      } catch (error) {
        console.error(error);
      }
    });
</script>

<%- include('../partials/page_footer.ejs') %> <%-
include('../partials/footer.ejs')%>
