<%- include('../partials/header.ejs') %> <%-
include('../partials/page_header.ejs') %>

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.css"
/>

<style>
  .btn {
    color: white;
    background-color: grey;
    border-style: none;
    transition: transform 0.2s ease;
    border-style: none;
  }

  #toCheckout:hover {
    transform: scale(1.1);
  }
</style>

<main class="main">
  <!-- Breadcrumbs -->
  <div class="page-header breadcrumb-wrap pb-5 pt-5" style="padding: 0px">
    <div class="container">
      <div class="breadcrumb" style="height: 10px">
        <a href="/" rel="nofollow">Home</a>
        <span>Your Cart</span>
      </div>
    </div>
  </div>

  <section class="mt-50 mb-50">
    <div class="container">
      <div class="row">
        <% if(cart) { %>
        <div class="col-12 d-flex" style="flex-direction: column">
          <!-- Product Table -->
          <div class="table-responsive mb-20">
            <table class="table shopping-summery text-center clean">
              <thead>
                <tr class="main-heading">
                  <th scope="col">Image</th>
                  <th scope="col">Name</th>
                  <th scope="col">Price</th>
                  <th scope="col">Quantity</th>
                  <th scope="col">Subtotal</th>
                  <th scope="col">Remove</th>
                </tr>
              </thead>
              <tbody>
                <% if (cart.products && Array.isArray(cart.products)) { %> <%
                cart.products.forEach((prod) => { %> <% if (prod &&
                prod.productID && prod.productID._id) { %>
                <tr data-product-id="<%= prod.productID._id %>">
                  <td class="image product-thumbnail">
                    <img
                      src="/uploads/<%= prod.productID.media[0] %>"
                      alt="<%= prod.productID.name %>"
                    />
                  </td>
                  <td class="product-des product-name">
                    <h5 class="product-name">
                      <a href="shop-product-right.html">
                        <%= prod.productID.name %>
                      </a>
                    </h5>
                  </td>
                  <td data-title="Price">
                    <span class="price"> $ <%= prod.productID.price %> </span>
                  </td>
                  <!-- Quantity Button -->
                  <td class="text-center" data-title="Stock">
                    <div class="detail-qty border radius m-auto">
                      <a
                        class="qty-down"
                        data-product-id="<%= prod.productID._id %>"
                      >
                        <i class="fi-rs-angle-small-down"></i>
                      </a>
                      <span id="qty-<%= prod.productID._id %>" class="qty-val">
                        <%= prod.quantity %>
                      </span>
                      <a
                        class="qty-up"
                        data-product-id="<%= prod.productID._id %>"
                      >
                        <i class="fi-rs-angle-small-up"></i>
                      </a>
                    </div>
                  </td>
                  <td class="text-right subtotal" data-title="Cart">
                    <span class="subtotal-value">
                      $ <%= prod.quantity * prod.productID.price %>
                    </span>
                  </td>
                  <td class="action" data-title="Remove">
                    <a
                      class="text-muted delete"
                      data-product-id="<%= prod.productID._id %>"
                    >
                      <i class="fi-rs-trash"></i>
                    </a>
                  </td>
                </tr>
                <% } else { %>
                <!-- Handle case where productID or _id is missing -->
                <tr>
                  <td colspan="6">Invalid Product Data</td>
                </tr>
                <% } %> <% }); %> <% } else { %>
                <!-- Handle case where cart.products is missing or not an array -->
                <tr>
                  <td colspan="6">No Products Found</td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <!-- Total Section -->
          <div class="row mb-50 text-center" style="justify-content: center">
            <div class="col-lg-6 col-md-12">
              <div class="border p-md-4 p-30 border-radius cart-totals">
                <div class="heading_s1 mb-3">
                  <h4>Cart Totals</h4>
                </div>
                <div class="table-responsive">
                  <table class="table">
                    <tbody>
                      <tr>
                        <td class="cart_total_label">Cart Subtotal</td>
                        <td class="cart_total_amount">
                          <span
                            class="font-lg fw-900 text-brand"
                            id="cart-total"
                          ></span>
                        </td>
                      </tr>
                      <tr>
                        <td class="cart_total_label">Shipping</td>
                        <td class="cart_total_amount">
                          <i class="ti-gift mr-5"></i> Free Shipping
                        </td>
                      </tr>
                      <tr>
                        <td class="cart_total_label">Total</td>
                        <td class="cart_total_amount">
                          <strong
                            ><span
                              class="font-xl fw-900 text-brand"
                              id="grand-total"
                            ></span
                          ></strong>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
                <a
                  onclick="checkStockBeforeCheckout()"
                  id="toCheckout"
                  class="btn"
                  style="background-color: black"
                >
                  <i class="fi-rs-box-alt mr-10"></i>
                  Proceed To CheckOut</a
                >
              </div>
            </div>
          </div>
        </div>
        <% } else { %>
        <main
          class="main"
          style="
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 50vh;
            margin: 0;
          "
        >
          <div
            class="empty-cart-container"
            style="
              text-align: center;
              background-color: #fff;
              border-radius: 8px;
              padding: 40px;
              box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            "
          >
            <!-- <img
              src="empty-cart-image.png"
              alt="Empty Cart Image"
              style="width: 120px; margin-bottom: 20px"
            /> -->
            <h2 style="color: #333; font-size: 24px; margin-bottom: 10px">
              Your cart is empty
            </h2>
            <p style="color: #666; font-size: 16px; margin-bottom: 20px">
              Looks like you haven't added any items to your cart yet.
            </p>
            <button
              onclick="goToShopPage()"
              style="
                padding: 12px 24px;
                font-size: 16px;
                background-color: #007bff;
                color: #fff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                transition: background-color 0.3s ease;
              "
            >
              Go to Shop Page
            </button>
          </div>
        </main>

        <% } %>
      </div>
    </div>
  </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Update Cart Total
  function updateCartTotals() {
    const subtotalElements = document.querySelectorAll(".subtotal-value");
    let newCartTotal = 0;
    subtotalElements.forEach((subEl) => {
      const subValue = parseFloat(subEl.textContent.replace("$ ", ""));
      newCartTotal += subValue;
    });

    const cartTotalElement = document.getElementById("cart-total");
    const grandTotalElement = document.getElementById("grand-total");
    if (cartTotalElement && grandTotalElement) {
      const formattedTotal = `$ ${newCartTotal}`;
      cartTotalElement.textContent = formattedTotal;
      grandTotalElement.textContent = formattedTotal;
    }
  }

  // Update quantity with limit check.
  const updateQuantity = async (productId, amount) => {
    try {
      const qtElement = document.getElementById(`qty-${productId}`);
      const currentQuantity = parseInt(qtElement.textContent);

      if (currentQuantity === 1 && amount === -1) {
        console.log("Cannot decrease quantity below 1.");
        return;
      } else if (currentQuantity === 5 && amount === 1) {
        Swal.fire({
          icon: "info",
          title: "Maximum Quantity Reached.",
          text: "Maximum quantity per person is 5.",
          confirmButtonText: "OK",
        });
        return;
      }

      const response = await fetch(
        `/updateQuantity?productId=${productId}&amount=${amount}`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        }
      );

      if (response.ok) {
        const data = await response.json();
        const updatedCart = data.cart;

        const updatedProduct = updatedCart.products.find(
          (prod) => prod.productID === productId
        );
        const priceElement = document.querySelector(
          `tr[data-product-id="${productId}"] .price`
        );
        const productPrice = parseFloat(
          priceElement.textContent.replace("$", "")
        );
        const subtotal = updatedProduct.quantity * productPrice;
        const subtotalElement = document.querySelector(
          `tr[data-product-id="${productId}"] .subtotal-value`
        );

        subtotalElement.textContent = `$ ${subtotal}`;
        updateCartTotals();

        qtElement.textContent = updatedProduct.quantity;
      } else {
        console.error("Failed to update quantity:", response.statusText);
      }
    } catch (error) {
      console.error("Error updating quantity:", error);
    }
  };

  // Initial cart total calculation
  document.addEventListener("DOMContentLoaded", () => {
    updateCartTotals();
  });

  // Add event listeners to quantity up buttons.
  document.querySelectorAll(".qty-up").forEach((button) => {
    button.addEventListener("click", async (event) => {
      const productId = event.target
        .closest("[data-product-id]")
        .getAttribute("data-product-id");
      updateQuantity(productId, 1);
    });
  });

  // Add event listeners to quantity down buttons.
  document.querySelectorAll(".qty-down").forEach((button) => {
    button.addEventListener("click", async (event) => {
      const productId = event.target
        .closest("[data-product-id]")
        .getAttribute("data-product-id");
      updateQuantity(productId, -1);
    });
  });

  // Delete from cart.
  document.querySelectorAll(".delete").forEach((button) => {
    button.addEventListener("click", async (event) => {
      const shouldDelete = await Swal.fire({
        title: "Are you sure?",
        text: "Are you sure you want to remove this item from cart?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes",
        cancelButtonText: "No",
      });

      if (shouldDelete.isConfirmed) {
        const productId = event.target
          .closest("[data-product-id]")
          .getAttribute("data-product-id");
        deleteFromCart(productId);
      }
    });
  });

  // Remove from Cart.
  const deleteFromCart = async (productId) => {
    try {
      const response = await fetch(`/deleteItem?productId=${productId}`, {
        method: "POST",
      });

      if (response.ok) {
        const data = await response.json();
        const { message, cart } = data;
        const productRow = document.querySelector(
          `tr[data-product-id="${productId}"]`
        );
        if (productRow) {
          productRow.remove();
        }
        const rows = document.querySelectorAll(".product-name");
        console.log(rows.length);
        updateCartTotals();
        if (!rows.length) location.reload();
      } else {
        console.error("Failed to delete item:", response.statusText);
      }
    } catch (error) {
      console.error("Error deleting item:", error);
    }
  };

  // Check Stock before Checkout.
  async function checkStockBeforeCheckout() {
    const cartProducts = document.querySelectorAll("tbody tr");
    const cart = document.querySelectorAll(".qty-val");
    console.log(cart);
    let allProductsAvailable = true;
    console.log(cartProducts);
    for (const product of cart) {
      console.log(product);
      const productId = product.id.replace("qty-", "");
      console.log(productId);
      const quantityElement = product.textContent.trim();
      console.log(product.textContent.trim());
      if (quantityElement) {
        const quantity = parseInt(quantityElement);

        const response = await fetch(
          `/checkStock?productId=${productId}&quantity=${quantity}`
        );
        if (response.ok) {
          const data = await response.json();
          const { availableStock, productName } = data;

          if (quantity > availableStock) {
            allProductsAvailable = false;
            Swal.fire({
              icon: "error",
              title: "Not Enough Stock",
              text: `There is not enough stock for ${productName}.`,
              confirmButtonText: "OK",
            });
            break;
          }
        } else {
          console.error("Failed to check stock:", response.statusText);
          allProductsAvailable = false;
          break;
        }
      } else {
        console.error(
          `Quantity element not found for product ID: ${productId}`
        );
        allProductsAvailable = false;
        break;
      }
    }

    if (allProductsAvailable) {
      window.location.href = "/checkout";
    }
  }

  function goToShopPage() {
    window.location.href = "/shop";
  }
</script>

<%- include('../partials/page_footer.ejs') %> <%-
include('../partials/footer.ejs')%>
