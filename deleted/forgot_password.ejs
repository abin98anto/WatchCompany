<!-- check if mail exists -->
<!-- <script>
  document
    .getElementById("sendOtpButton")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const email = document.getElementById("email").value;
      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();
        if (data.exists) {
          // Send OTP to user's email and show SweetAlert
          Swal.fire({
            title: "Enter OTP",
            input: "text",
            inputAttributes: {
              autocapitalize: "off",
            },
            showCancelButton: true,
            confirmButtonText: "Submit",
            showLoaderOnConfirm: true,
            preConfirm: (otp) => {
              // Verify OTP and update password
            },
            allowOutsideClick: () => !Swal.isLoading(),
          }).then((result) => {
            if (result.isConfirmed) {
              // Redirect to the login page
            }
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Email not found!",
          });
        }
      } catch (error) {
        console.error(error);
      }
    });
</script> -->
<!-- <script>
  document
    .getElementById("verifyOTPForm")
    .addEventListener("submit", async (e) => {
      e.preventDefault();
      const otp = document.getElementById("otp").value;
      const email = document.getElementById("email").value;
      try {
        // Verify OTP and update password
        // You can add your logic here to verify the OTP
        // Once OTP is verified, redirect to login page or do any other action
        // For demo purpose, I'm just showing an alert
        alert(`OTP Verified. Email: ${email}, OTP: ${otp}`);
      } catch (error) {
        console.error(error);
      }
    });

  // Handle cancel button click
  document.getElementById("cancelButton").addEventListener("click", () => {
    // Redirect to the login page or any other action you want
    window.location.href = "/login";
  });
</script> -->
<!-- <script>
  document
    .getElementById("submitOTPButton")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById("email");
      const email = emailInput.value.trim();

      // Regular expression to validate email format
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!emailRegex.test(email)) {
        // If email is not in valid format, show error message and return
        document.getElementById("errorMessage").innerText =
          "Please enter a valid email address.";
        emailInput.focus(); // Set focus on the email input field
        return;
      }

      // If email is valid, proceed with sending OTP
      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();
        if (data.exists) {
          const otpResponse = await fetch("/forgotPassword_otp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email }),
          });
          const otpData = await otpResponse.text();
          console.log(`displaying the sweet alert.`);

          // Display SweetAlert for OTP input
          Swal.fire({
            title: "Enter OTP",
            input: "text",
            inputAttributes: {
              autocapitalize: "off",
            },
            showCancelButton: true,
            confirmButtonText: "Submit",
            showLoaderOnConfirm: true,
            preConfirm: (otp) => {
              // Handle OTP submission
              // You can add your logic here to verify the OTP
              // Once OTP is verified, redirect to the login page or do any other action
              // For demo purpose, I'm just showing an alert
              console.log(`OTP Verified. Email: ${email}, OTP: ${otp}`);
            },
            allowOutsideClick: () => !Swal.isLoading(),
          });
        } else {
          // Display error message if email doesn't belong to any account
          document.getElementById("errorMessage").innerText =
            "Email doesn't belong to any account. Please sign up.";
        }
      } catch (error) {
        console.error(error);
      }
    });
</script> -->
<!-- <script>
  document
    .getElementById("submitOTPButton")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById("email");
      const email = emailInput.value.trim();

      // Regular expression to validate email format
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!emailRegex.test(email)) {
        // If email is not in valid format, show error message and return
        document.getElementById("errorMessage").innerText =
          "Please enter a valid email address.";
        emailInput.focus(); // Set focus on the email input field
        return;
      }

      // If email is valid, proceed with sending OTP
      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();
        if (data.exists) {
          const otpResponse = await fetch("/forgotPassword_otp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email }),
          });
          const otpData = await otpResponse.text();
          console.log(otpData);
          console.log(`displaying the sweet alert.`);

          // Display SweetAlert for OTP input
          Swal.fire({
            title: "Enter OTP",
            input: "text",
            inputAttributes: {
              autocapitalize: "off",
            },
            showCancelButton: true,
            confirmButtonText: "Submit",
            showLoaderOnConfirm: true,
            preConfirm: (otp) => {
              // Handle OTP submission
              // You can add your logic here to verify the OTP
              // Once OTP is verified, redirect to the login page or do any other action
              // For demo purpose, I'm just showing an alert
              console.log(`OTP Verified. Email: ${email}, OTP: ${otp}`);
            },
            allowOutsideClick: () => !Swal.isLoading(),
          });
        } else {
          // Display error message if email doesn't belong to any account
          document.getElementById("errorMessage").innerText =
            "Email doesn't belong to any account. Please sign up.";
        }
      } catch (error) {
        console.error(error);
      }
    });
</script> -->
<!-- one that works without the timer -->
<!-- <script>
  document
    .getElementById("submitOTPButton")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById("email");
      const email = emailInput.value.trim();

      // Regular expression to validate email format
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!emailRegex.test(email)) {
        // If email is not in valid format, show error message and return
        document.getElementById("errorMessage").innerText =
          "Please enter a valid email address.";
        emailInput.focus(); // Set focus on the email input field
        return;
      }

      // If email is valid, proceed with sending OTP
      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();
        if (data.exists) {
          const otpResponse = await fetch("/forgotPassword_otp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email }),
          });
          const otpData = await otpResponse.text();
          console.log(`displaying the sweet alert.`);

          // Display SweetAlert for OTP input
          Swal.fire({
            title: "Enter OTP",
            input: "text",
            inputAttributes: {
              autocapitalize: "off",
            },
            showCancelButton: true,
            confirmButtonText: "Submit",
            showLoaderOnConfirm: true,
            preConfirm: (otp) => {
              // Verify OTP
              return fetch("/forgotPassword_verifyotp", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ otp }),
              })
                .then((response) => response.json())
                .then((data) => {
                  if (data.success) {
                    // If OTP is correct, display another SweetAlert for entering new password
                    Swal.fire({
                      title: "Enter New Password",
                      html:
                        '<input id="newPassword" class="swal2-input" placeholder="New Password" type="password">' +
                        '<input id="confirmPassword" class="swal2-input" placeholder="Confirm Password" type="password">',
                      showCancelButton: true,
                      confirmButtonText: "Submit",
                      showLoaderOnConfirm: true,
                      preConfirm: (password) => {
                        // Handle password submission
                        // You can add your logic here to handle password submission
                        // For demo purpose, I'm just showing an alert
                        console.log("New Password:", password);
                      },
                      allowOutsideClick: () => !Swal.isLoading(),
                    });
                  } else {
                    // If OTP is incorrect, redirect back to forgot password page
                    window.location.href = "/forgot_password";
                  }
                })
                .catch((error) => {
                  console.error(error);
                  Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Error verifying OTP!",
                  });
                });
            },
            allowOutsideClick: () => !Swal.isLoading(),
          });
        } else {
          // Display error message if email doesn't belong to any account
          document.getElementById("errorMessage").innerText =
            "Email doesn't belong to any account. Please sign up.";
        }
      } catch (error) {
        console.error(error);
      }
    });
</script> -->
<!-- one that shows asks if you want to send to otp again. -->
<!-- <script>
  document
    .getElementById("submitOTPButton")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById("email");
      const email = emailInput.value.trim();

      // Regular expression to validate email format
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!emailRegex.test(email)) {
        // If email is not in valid format, show error message and return
        document.getElementById("errorMessage").innerText =
          "Please enter a valid email address.";
        emailInput.focus(); // Set focus on the email input field
        return;
      }

      // If email is valid, proceed with sending OTP
      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();
        if (data.exists) {
          const otpResponse = await fetch("/forgotPassword_otp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email }),
          });
          const otpData = await otpResponse.text();
          console.log(`displaying the sweet alert.`);

          // Display SweetAlert for OTP input
          let timeLeft = 60; // Timer starts at 60 seconds
          const timerInterval = setInterval(() => {
            document.getElementById(
              "timer"
            ).innerText = `Time left: ${timeLeft} seconds`;
            timeLeft--;

            if (timeLeft < 0) {
              clearInterval(timerInterval); // Stop the timer
              Swal.fire({
                title: "Resend OTP",
                text: "Do you want to resend OTP?",
                showCancelButton: true,
                confirmButtonText: "Yes",
                cancelButtonText: "No",
              }).then((result) => {
                if (result.isConfirmed) {
                  // Handle resend OTP logic here
                  console.log("Resend OTP clicked");
                }
              });
            }
          }, 1000);

          Swal.fire({
            title: "Enter OTP",
            input: "text",
            inputAttributes: {
              autocapitalize: "off",
            },
            html: '<span id="timer">Time left: 60 seconds</span>',
            showCancelButton: true,
            confirmButtonText: "Submit",
            showLoaderOnConfirm: true,
            preConfirm: (otp) => {
              clearInterval(timerInterval); // Stop the timer when OTP is submitted
              // Verify OTP
              return fetch("/forgotPassword_verifyotp", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ otp }),
              })
                .then((response) => response.json())
                .then((data) => {
                  if (data.success) {
                    // If OTP is correct, display another SweetAlert for entering new password
                    Swal.fire({
                      title: "Enter New Password",
                      html:
                        '<input id="newPassword" class="swal2-input" placeholder="New Password" type="password">' +
                        '<input id="confirmPassword" class="swal2-input" placeholder="Confirm Password" type="password">',
                      showCancelButton: true,
                      confirmButtonText: "Submit",
                      showLoaderOnConfirm: true,
                      preConfirm: (password) => {
                        // Handle password submission
                        // You can add your logic here to handle password submission
                        // For demo purpose, I'm just showing an alert
                        console.log("New Password:", password);
                      },
                      allowOutsideClick: () => !Swal.isLoading(),
                    });
                  } else {
                    // If OTP is incorrect, redirect back to forgot password page
                    window.location.href = "/forgot_password";
                  }
                })
                .catch((error) => {
                  console.error(error);
                  Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Error verifying OTP!",
                  });
                });
            },
            allowOutsideClick: () => !Swal.isLoading(),
          });
        } else {
          // Display error message if email doesn't belong to any account
          document.getElementById("errorMessage").innerText =
            "Email doesn't belong to any account. Please sign up.";
        }
      } catch (error) {
        console.error(error);
      }
    });
</script> -->
<!-- <script>
  document
    .getElementById("submitOTPButton")
    .addEventListener("click", async (e) => {
      e.preventDefault();
      const emailInput = document.getElementById("email");
      const email = emailInput.value.trim();

      // Regular expression to validate email format
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!emailRegex.test(email)) {
        // If email is not in valid format, show error message and return
        document.getElementById("errorMessage").innerText =
          "Please enter a valid email address.";
        emailInput.focus(); // Set focus on the email input field
        return;
      }

      // If email is valid, proceed with sending OTP
      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });
        const data = await response.json();
        if (data.exists) {
          // Function to send OTP
          const sendOTP = async () => {
            const otpResponse = await fetch("/forgotPassword_otp", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ email }),
            });
            return otpResponse.text();
          };

          // Function to display OTP input with timer
          const displayOTPInput = async () => {
            let timeLeft = 60; // Timer starts at 60 seconds
            const timerInterval = setInterval(() => {
              document.getElementById(
                "timer"
              ).innerText = `Time left: ${timeLeft} seconds`;
              timeLeft--;

              if (timeLeft < 0) {
                clearInterval(timerInterval); // Stop the timer
                Swal.fire({
                  title: "Resend OTP",
                  text: "Do you want to resend OTP?",
                  showCancelButton: true,
                  confirmButtonText: "Yes",
                  cancelButtonText: "No",
                }).then((result) => {
                  if (result.isConfirmed) {
                    // Resend OTP logic
                    sendOTP().then(() => {
                      displayOTPInput(); // Display OTP input again after resending OTP
                    });
                  }
                });
              }
            }, 1000);

            Swal.fire({
              title: "Enter OTP",
              input: "text",
              inputAttributes: {
                autocapitalize: "off",
              },
              html: '<span id="timer">Time left: 60 seconds</span>',
              showCancelButton: true,
              confirmButtonText: "Submit",
              showLoaderOnConfirm: true,
              preConfirm: (otp) => {
                clearInterval(timerInterval); // Stop the timer when OTP is submitted
                // Verify OTP
                return fetch("/forgotPassword_verifyotp", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ otp }),
                })
                  .then((response) => response.json())
                  .then((data) => {
                    if (data.success) {
                      // If OTP is correct, display another SweetAlert for entering new password
                      Swal.fire({
                        title: "Enter New Password",
                        html:
                          '<input id="newPassword" class="swal2-input" placeholder="New Password" type="password">' +
                          '<input id="confirmPassword" class="swal2-input" placeholder="Confirm Password" type="password">',
                        showCancelButton: true,
                        confirmButtonText: "Submit",
                        showLoaderOnConfirm: true,
                        preConfirm: (password) => {
                          // Handle password submission
                          // You can add your logic here to handle password submission
                          // For demo purpose, I'm just showing an alert
                          console.log("New Password:", password);
                        },
                        allowOutsideClick: () => !Swal.isLoading(),
                      });
                    } else {
                      // If OTP is incorrect, redirect back to forgot password page
                      window.location.href = "/forgot_password";
                    }
                  })
                  .catch((error) => {
                    console.error(error);
                    Swal.fire({
                      icon: "error",
                      title: "Oops...",
                      text: "Error verifying OTP!",
                    });
                  });
              },
              allowOutsideClick: () => !Swal.isLoading(),
            });
          };

          // Call function to send OTP and display OTP input
          await sendOTP();
          displayOTPInput();
        } else {
          // Display error message if email doesn't belong to any account
          document.getElementById("errorMessage").innerText =
            "Email doesn't belong to any account. Please sign up.";
        }
      } catch (error) {
        console.error(error);
      }
    });
</script> -->

<!-- <form id="forgotPasswordForm" method="post" class="text-center">
                  <div class="form-group">
                    <input
                      type="text"
                      name="email"
                      id="email"
                      placeholder="Email"
                      class="form-control"
                    />
                  </div>
                  <div class="form-group">
                    <button
                      type="submit"
                      id="sendOtpButton"
                      class="btn btn-fill-out btn-block hover-up"
                      style="background-color: black"
                    >
                      Send OTP
                    </button>
                  </div>
                </form> -->
